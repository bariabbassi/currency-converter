{"ast":null,"code":"var _jsxFileName = \"/home/bari/code/react/currency-converter/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport CurrencyRow from './CurrencyRow';\nimport axios from 'axios';\n\nfunction App() {\n  const [currencies, setCurrencies] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState('EUR');\n  const [toCurrency, setToCurrency] = useState('USD');\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const [isFromAmountSelected, setOnChangeAmount] = useState(true);\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: 'EUR'\n      }\n    }).then(res => {\n      setCurrencies(['EUR', ...Object.keys(res.data.rates)]);\n    });\n  }, []);\n  useEffect(() => {\n    if (isFromAmountSelected) {\n      updateToAmount();\n    }\n  }, [fromAmount]);\n  useEffect(() => {\n    if (!isFromAmountSelected) {\n      updateFromAmount();\n    }\n  }, [toAmount]);\n  useEffect(() => {\n    updateToAmount();\n  }, [fromCurrency]);\n  useEffect(() => {\n    updateFromAmount();\n  }, [toCurrency]);\n\n  function updateFromAmount() {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: toCurrency\n      }\n    }).then(res => {\n      setFromAmount((toAmount * res.data.rates[fromCurrency]).toFixed(2));\n    });\n  }\n\n  function updateToAmount() {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: fromCurrency\n      }\n    }).then(res => {\n      setToAmount((fromAmount * res.data.rates[toCurrency]).toFixed(2));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Currency Converter\"), /*#__PURE__*/React.createElement(CurrencyRow, {\n    currencies: currencies,\n    rowCurrency: fromCurrency,\n    onChangeCurrency: e => setFromCurrency(e.target.value),\n    amount: fromAmount,\n    isFromAmountSelected: e => {\n      setOnChangeAmount(true);\n      setFromAmount(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CurrencyRow, {\n    currencies: currencies,\n    rowCurrency: toCurrency,\n    onChangeCurrency: e => setToCurrency(e.target.value),\n    amount: toAmount,\n    isFromAmountSelected: e => {\n      setOnChangeAmount(false);\n      setToAmount(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bari/code/react/currency-converter/src/App.js"],"names":["React","useState","useEffect","CurrencyRow","axios","App","currencies","setCurrencies","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromAmount","setFromAmount","toAmount","setToAmount","isFromAmountSelected","setOnChangeAmount","method","url","params","base","then","res","Object","keys","data","rates","updateToAmount","updateFromAmount","toFixed","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport CurrencyRow from './CurrencyRow'\nimport axios from 'axios';\n\nfunction App() {\n  const [currencies, setCurrencies] = useState([])\n  const [fromCurrency, setFromCurrency] = useState('EUR')\n  const [toCurrency, setToCurrency] = useState('USD')\n  const [fromAmount, setFromAmount] = useState(0)\n  const [toAmount, setToAmount] = useState(0)\n  const [isFromAmountSelected, setOnChangeAmount] = useState(true)\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: 'EUR'\n      }\n    }).then(res => {\n      setCurrencies(['EUR', ...Object.keys(res.data.rates)])\n    })\n  }, [])\n\n  useEffect(() => {\n    if (isFromAmountSelected) {\n      updateToAmount()\n    }\n  }, [fromAmount])\n\n  useEffect(() => {\n    if (!isFromAmountSelected) {\n      updateFromAmount()\n    }\n  }, [toAmount])\n\n  useEffect(() => {\n    updateToAmount()\n  }, [fromCurrency])\n\n  useEffect(() => {\n    updateFromAmount()\n  }, [toCurrency])\n\n  function updateFromAmount() {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: toCurrency\n      }\n    }).then(res => {\n      setFromAmount((toAmount * res.data.rates[fromCurrency]).toFixed(2))\n    })\n  }\n\n  function updateToAmount() {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: fromCurrency\n      }\n    }).then(res => {\n      setToAmount((fromAmount * res.data.rates[toCurrency]).toFixed(2))\n    })\n  }\n\n  return (\n    <div className=\"App\">\n\n      <header className='title'>Currency Converter</header>\n\n      <CurrencyRow\n        currencies={currencies}\n        rowCurrency={fromCurrency}\n        onChangeCurrency={e => setFromCurrency(e.target.value)}\n        amount={fromAmount}\n        isFromAmountSelected={e => {\n          setOnChangeAmount(true)\n          setFromAmount(e.target.value)\n        }}\n      />\n\n      <CurrencyRow\n        currencies={currencies}\n        rowCurrency={toCurrency}\n        onChangeCurrency={e => setToCurrency(e.target.value)}\n        amount={toAmount}\n        isFromAmountSelected={e => {\n          setOnChangeAmount(false)\n          setToAmount(e.target.value)\n        }}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}