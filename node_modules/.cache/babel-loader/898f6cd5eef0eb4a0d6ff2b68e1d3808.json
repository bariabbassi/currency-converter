{"ast":null,"code":"var _jsxFileName = \"/home/bari/code/react/currency-converter/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Currency from './Currency';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const [currencies, setCurrencies] = useState([]);\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: 'EUR'\n      }\n    }).then(res => {\n      setCurrencies(['EUR', ...Object.keys(res.data.rates)]);\n    });\n  }, []);\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: fromCurrency\n      }\n    }).then(res => {\n      console.log(res.data.rates[toCurrency]);\n      if (isNaN(fromAmount)) setFromAmount(0);\n      setToAmount(fromAmount * res.data.rates[toCurrency]);\n    });\n  }, []);\n\n  function handleFromCurrency(e) {\n    setFromCurrency(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Convert\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"=\"));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bari/code/react/currency-converter/src/App.js"],"names":["React","useState","useEffect","Currency","axios","App","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromAmount","setFromAmount","toAmount","setToAmount","currencies","setCurrencies","method","url","params","base","then","res","Object","keys","data","rates","console","log","isNaN","handleFromCurrency","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAAC;AACJY,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,wCAFD;AAGJC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA;AAHJ,KAAD,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAI;AACbN,MAAAA,aAAa,CAAC,CAAC,KAAD,EAAQ,GAAGO,MAAM,CAACC,IAAP,CAAYF,GAAG,CAACG,IAAJ,CAASC,KAArB,CAAX,CAAD,CAAb;AAED,KATD;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaAvB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAAC;AACJY,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,wCAFD;AAGJC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAEb;AADA;AAHJ,KAAD,CAAL,CAMGc,IANH,CAMQC,GAAG,IAAI;AACbK,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAejB,UAAf,CAAZ;AACA,UAAIoB,KAAK,CAAClB,UAAD,CAAT,EAAuBC,aAAa,CAAC,CAAD,CAAb;AACvBE,MAAAA,WAAW,CAAEH,UAAU,GAAGW,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAejB,UAAf,CAAf,CAAX;AAED,KAXD;AAYD,GAbQ,EAaN,EAbM,CAAT;;AAeA,WAASqB,kBAAT,CAA4BC,CAA5B,EAA+B;AAC7BvB,IAAAA,eAAe,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAf;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAME;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANF,CADF;AAaD;;AAED,eAAe3B,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Currency from './Currency' \nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = useState('USD')\n  const [toCurrency, setToCurrency] = useState('EUR')\n  const [fromAmount, setFromAmount] = useState(0)\n  const [toAmount, setToAmount] = useState(0)\n  const [currencies, setCurrencies] = useState([])\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: 'EUR'\n      }\n    }).then(res => {\n      setCurrencies(['EUR', ...Object.keys(res.data.rates)])\n      \n    })\n  }, [])\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: fromCurrency\n      }\n    }).then(res => {\n      console.log(res.data.rates[toCurrency])\n      if (isNaN(fromAmount)) setFromAmount(0)\n      setToAmount((fromAmount * res.data.rates[toCurrency]))\n      \n    })\n  }, [])\n\n  function handleFromCurrency(e) {\n    setFromCurrency(e.target.value)\n  }\n\n  return (\n    <div className=\"App\">\n\n      <header className='title'>Convert</header>\n\n      {/* <Currency /> */}\n\n      <div className='equal'>=</div>\n\n      {/* <Currency /> */}\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}