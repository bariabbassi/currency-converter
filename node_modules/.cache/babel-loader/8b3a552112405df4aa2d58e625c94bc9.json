{"ast":null,"code":"var _jsxFileName = \"/home/bari/code/react/currency-converter/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Currency from './CurrencyRow';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = useState('EUR');\n  const [toCurrency, setToCurrency] = useState('USD');\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const [currencies, setCurrencies] = useState([]);\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: 'EUR'\n      }\n    }).then(res => {\n      setCurrencies(['EUR', ...Object.keys(res.data.rates)]);\n    });\n  }, []);\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: 'EUR'\n      }\n    }).then(res => {\n      if (isNaN(toAmount)) {\n        setToAmount(0);\n        setFromAmount(0);\n      } else {\n        setFromAmount(toAmount * res.data.rates[fromCurrency]);\n      }\n    });\n  }, [fromAmount]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Convert\"), /*#__PURE__*/React.createElement(Currency, {\n    currencies: currencies,\n    rowCurrency: fromCurrency,\n    onChangeCurrency: setFromCurrency,\n    amount: fromAmount,\n    onChangeAmount: setFromAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(Currency, {\n    currencies: currencies,\n    rowCurrency: toCurrency,\n    onChangeCurrency: setToCurrency,\n    amount: toAmount,\n    onChangeAmount: setToAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bari/code/react/currency-converter/src/App.js"],"names":["React","useState","useEffect","Currency","axios","App","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromAmount","setFromAmount","toAmount","setToAmount","currencies","setCurrencies","method","url","params","base","then","res","Object","keys","data","rates","isNaN"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAAC;AACJY,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,wCAFD;AAGJC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA;AAHJ,KAAD,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAI;AACbN,MAAAA,aAAa,CAAC,CAAC,KAAD,EAAQ,GAAGO,MAAM,CAACC,IAAP,CAAYF,GAAG,CAACG,IAAJ,CAASC,KAArB,CAAX,CAAD,CAAb;AAED,KATD;AAUD,GAXQ,EAWN,EAXM,CAAT;AAcAvB,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAAC;AACJY,MAAAA,MAAM,EAAE,KADJ;AAEJC,MAAAA,GAAG,EAAE,wCAFD;AAGJC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA;AAHJ,KAAD,CAAL,CAMGC,IANH,CAMQC,GAAG,IAAI;AACb,UAAIK,KAAK,CAACd,QAAD,CAAT,EAAoB;AAClBC,QAAAA,WAAW,CAAC,CAAD,CAAX;AACAF,QAAAA,aAAa,CAAC,CAAD,CAAb;AACD,OAHD,MAGO;AACLA,QAAAA,aAAa,CAAEC,QAAQ,GAAGS,GAAG,CAACG,IAAJ,CAASC,KAAT,CAAenB,YAAf,CAAb,CAAb;AACD;AAEF,KAdD;AAeD,GAhBQ,EAgBN,CAACI,UAAD,CAhBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,eAIE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAEI,UADd;AAEE,IAAA,WAAW,EAAER,YAFf;AAGE,IAAA,gBAAgB,EAAEC,eAHpB;AAIE,IAAA,MAAM,EAAEG,UAJV;AAKE,IAAA,cAAc,EAAEC,aALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAaE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAbF,eAeE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAEG,UADd;AAEE,IAAA,WAAW,EAAEN,UAFf;AAGE,IAAA,gBAAgB,EAAEC,aAHpB;AAIE,IAAA,MAAM,EAAEG,QAJV;AAKE,IAAA,cAAc,EAAEC,WALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AA0BD;;AAED,eAAeR,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Currency from './CurrencyRow'\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = useState('EUR')\n  const [toCurrency, setToCurrency] = useState('USD')\n  const [fromAmount, setFromAmount] = useState(0)\n  const [toAmount, setToAmount] = useState(0)\n  const [currencies, setCurrencies] = useState([])\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: 'EUR'\n      }\n    }).then(res => {\n      setCurrencies(['EUR', ...Object.keys(res.data.rates)])\n\n    })\n  }, [])\n\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: 'EUR'\n      }\n    }).then(res => {\n      if (isNaN(toAmount)){\n        setToAmount(0)\n        setFromAmount(0)\n      } else {\n        setFromAmount((toAmount * res.data.rates[fromCurrency]))\n      }\n      \n    })\n  }, [fromAmount])\n\n  return (\n    <div className=\"App\">\n\n      <header className='title'>Convert</header>\n\n      <Currency\n        currencies={currencies}\n        rowCurrency={fromCurrency}\n        onChangeCurrency={setFromCurrency}\n        amount={fromAmount}\n        onChangeAmount={setFromAmount}\n\n      />\n\n      <div className='equal'>=</div>\n\n      <Currency\n        currencies={currencies}\n        rowCurrency={toCurrency}\n        onChangeCurrency={setToCurrency}\n        amount={toAmount}\n        onChangeAmount={setToAmount}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}