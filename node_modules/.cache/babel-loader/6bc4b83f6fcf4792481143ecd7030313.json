{"ast":null,"code":"var _jsxFileName = \"/home/bari/code/react/currency-converter/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const currencies = ['USD', 'EUR', 'CAD'];\n  const exchangeRate = {\n    USD: {\n      USD: 1,\n      EUR: 1.1,\n      MAD: 10.1\n    },\n    EUR: {\n      USD: 0.9,\n      EUR: 1,\n      MAD: 10\n    },\n    MAD: {\n      USD: 0.09,\n      EUR: 0.1,\n      MAD: 1\n    }\n  };\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: fromCurrency\n      }\n    }).then(res => {\n      setToAmount((fromAmount * res.data.rates[toCurrency]).toFixed(2));\n    });\n  }, [fromCurrency]);\n  useEffect(() => {\n    //if (isNaN(toAmount)) setToAmount(0)\n    setFromAmount((toAmount * exchangeRate[toCurrency][fromCurrency]).toFixed(2));\n  }, [toCurrency]);\n\n  function handleFromAmount(e) {\n    setFromAmount(e.target.value);\n    setToAmount((e.target.value * exchangeRate[fromCurrency][toCurrency]).toFixed(2));\n  }\n\n  function handleToAmount(e) {\n    setToAmount(e.target.value);\n    setFromAmount((e.target.value * exchangeRate[toCurrency][fromCurrency]).toFixed(2));\n  }\n\n  function handleFromCurrency(e) {\n    setFromCurrency(e.target.value);\n  }\n\n  function handleToCurrency(e) {\n    setToCurrency(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Convert\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"amount\",\n    type: \"number\",\n    value: fromAmount,\n    min: \"0\",\n    onChange: handleFromAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"currency\",\n    value: fromCurrency,\n    onChange: handleFromCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, currencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n    key: currency,\n    value: currency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 39\n    }\n  }, currency)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"equal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"amount\",\n    type: \"number\",\n    value: toAmount,\n    min: \"0\",\n    onChange: handleToAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"currency\",\n    value: toCurrency,\n    onChange: handleToCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, currencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n    key: currency,\n    value: currency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 39\n    }\n  }, currency)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bari/code/react/currency-converter/src/App.js"],"names":["React","useState","useEffect","axios","App","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromAmount","setFromAmount","toAmount","setToAmount","currencies","exchangeRate","USD","EUR","MAD","method","url","params","base","then","res","data","rates","toFixed","handleFromAmount","e","target","value","handleToAmount","handleFromCurrency","handleToCurrency","map","currency"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = useState('USD')\n  const [toCurrency, setToCurrency] = useState('EUR')\n  const [fromAmount, setFromAmount] = useState(0)\n  const [toAmount, setToAmount] = useState(0)\n  const currencies = ['USD', 'EUR', 'CAD']\n  const exchangeRate = {\n    USD: {\n      USD: 1,\n      EUR: 1.1,\n      MAD: 10.1\n    },\n    EUR: {\n      USD: 0.9,\n      EUR: 1,\n      MAD: 10\n    },\n    MAD: {\n      USD: 0.09,\n      EUR: 0.1,\n      MAD: 1\n    }\n  }\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: 'https://api.exchangeratesapi.io/latest',\n      params: {\n        base: fromCurrency\n      }\n    }).then(res => {\n      setToAmount((fromAmount * res.data.rates[toCurrency]).toFixed(2))\n    })\n  }, [fromCurrency])\n\n  useEffect(() => {\n    //if (isNaN(toAmount)) setToAmount(0)\n    setFromAmount((toAmount * exchangeRate[toCurrency][fromCurrency]).toFixed(2))\n  }, [toCurrency])\n  \n  function handleFromAmount(e) {\n    setFromAmount(e.target.value)\n    setToAmount((e.target.value * exchangeRate[fromCurrency][toCurrency]).toFixed(2))\n  }\n  \n  function handleToAmount(e) {\n    setToAmount(e.target.value)\n    setFromAmount((e.target.value * exchangeRate[toCurrency][fromCurrency]).toFixed(2))\n  }\n\n  function handleFromCurrency(e) {\n    setFromCurrency(e.target.value)\n  }\n\n  function handleToCurrency(e) {\n    setToCurrency(e.target.value)\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      <header className='title'>Convert</header>\n\n      <div className='input'>\n        <input className='amount' type='number' value={fromAmount} min='0' onChange={handleFromAmount} />\n        <select className='currency' value={fromCurrency} onChange={handleFromCurrency}>\n          {currencies.map(currency => <option key={currency} value={currency}>{currency}</option>)}\n        </select>\n      </div>\n\n      <div className='equal'>=</div>\n\n      <div className='input'>\n        <input className='amount' type='number' value={toAmount} min='0' onChange={handleToAmount} />\n        <select className='currency' value={toCurrency} onChange={handleToCurrency}>\n          {currencies.map(currency => <option key={currency} value={currency}>{currency}</option>)}\n        </select>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}