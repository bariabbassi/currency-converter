{"ast":null,"code":"var _jsxFileName = \"/home/bari/code/react/currency-converter/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = useState('USD');\n  const [toCurrency, setToCurrency] = useState('EUR');\n  const [fromAmount, setFromAmount] = useState(0);\n  const [toAmount, setToAmount] = useState(0);\n  const currencies = ['USD', 'EUR', 'MAD'];\n  const exchangeRate = {\n    USD: {\n      USD: 1,\n      EUR: 1.1,\n      MAD: 10.1\n    },\n    EUR: {\n      USD: 0.9,\n      EUR: 1,\n      MAD: 10\n    },\n    MAD: {\n      USD: 0.09,\n      EUR: 0.1,\n      MAD: 1\n    }\n  };\n  useEffect(() => {}, [fromCurrency]);\n\n  function handleFromAmount(e) {\n    setFromAmount(e.target.value);\n    setToAmount((e.target.value * exchangeRate[fromCurrency][toCurrency]).toFixed(2));\n  }\n\n  function handleToAmount(e) {\n    setToAmount(e.target.value);\n    setFromAmount((e.target.value * exchangeRate[toCurrency][fromCurrency]).toFixed(2));\n  }\n\n  function handleFromCurrency(e) {\n    setFromCurrency(e.target.value); //if (isNaN(fromAmount)) setFromAmount(0)\n\n    setToAmount((fromAmount * exchangeRate[fromCurrency][toCurrency]).toFixed(2));\n  }\n\n  function handleToCurrency(e) {\n    setToCurrency(e.target.value); //if (isNaN(toAmount)) setToAmount(0)\n\n    setFromAmount((toAmount * exchangeRate[toCurrency][fromCurrency]).toFixed(2));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: fromAmount,\n    min: \"0\",\n    onChange: handleFromAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"dropdown\",\n    value: fromCurrency,\n    onChange: handleFromCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, currencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n    key: currency,\n    value: currency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 39\n    }\n  }, currency)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"=\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    value: toAmount,\n    min: \"0\",\n    onChange: handleToAmount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"dropdown\",\n    value: toCurrency,\n    onChange: handleToCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, currencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n    key: currency,\n    value: currency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 39\n    }\n  }, currency)))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/bari/code/react/currency-converter/src/App.js"],"names":["React","useState","useEffect","App","fromCurrency","setFromCurrency","toCurrency","setToCurrency","fromAmount","setFromAmount","toAmount","setToAmount","currencies","exchangeRate","USD","EUR","MAD","handleFromAmount","e","target","value","toFixed","handleToAmount","handleFromCurrency","handleToCurrency","map","currency"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [fromCurrency, setFromCurrency] = useState('USD')\n  const [toCurrency, setToCurrency] = useState('EUR')\n  const [fromAmount, setFromAmount] = useState(0)\n  const [toAmount, setToAmount] = useState(0)\n  const currencies = ['USD', 'EUR', 'MAD']\n  const exchangeRate = {\n    USD: {\n      USD: 1,\n      EUR: 1.1,\n      MAD: 10.1\n    },\n    EUR: {\n      USD: 0.9,\n      EUR: 1,\n      MAD: 10\n    },\n    MAD: {\n      USD: 0.09,\n      EUR: 0.1,\n      MAD: 1\n    }\n  }\n\n  useEffect(() => {\n    \n  }, [fromCurrency])\n\n  function handleFromAmount(e) {\n    setFromAmount(e.target.value)\n    setToAmount((e.target.value * exchangeRate[fromCurrency][toCurrency]).toFixed(2))\n  }\n  \n  function handleToAmount(e) {\n    setToAmount(e.target.value)\n    setFromAmount((e.target.value * exchangeRate[toCurrency][fromCurrency]).toFixed(2))\n  }\n\n  function handleFromCurrency(e) {\n    setFromCurrency(e.target.value)\n    //if (isNaN(fromAmount)) setFromAmount(0)\n    setToAmount((fromAmount * exchangeRate[fromCurrency][toCurrency]).toFixed(2))\n  }\n\n  function handleToCurrency(e) {\n    setToCurrency(e.target.value)\n    //if (isNaN(toAmount)) setToAmount(0)\n    setFromAmount((toAmount * exchangeRate[toCurrency][fromCurrency]).toFixed(2))\n  }\n\n\n  return (\n    <div className=\"App\">\n\n      <div>\n        <input type='number' value={fromAmount} min='0' onChange={handleFromAmount} />\n        <select className='dropdown' value={fromCurrency} onChange={handleFromCurrency}>\n          {currencies.map(currency => <option key={currency} value={currency}>{currency}</option>)}\n        </select>\n      </div>\n\n      <div>=</div>\n\n      <div>\n        <input type='number' value={toAmount} min='0' onChange={handleToAmount} />\n        <select className='dropdown' value={toCurrency} onChange={handleToCurrency}>\n          {currencies.map(currency => <option key={currency} value={currency}>{currency}</option>)}\n        </select>\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}